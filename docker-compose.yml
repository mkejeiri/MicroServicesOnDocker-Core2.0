version: "3.2"

networks:
   frontend:
   backend:

services:
   webmvc:
      build:
         context: .\src\Web\WebMvc
         dockerfile: Dockerfile
      environment:
         - ASPNETCORE_ENVIRONMENT=Development
         - CatalogUrl=http://catalog
         - IdentityUrl=http://10.0.75.1:5300
         - CartUrl=http://cart
      container_name: webshop
      ports:
         - "5200:80"
      networks:
         - frontend
      depends_on:
         - catalog
         - tokenserver
         - cart
   catalog:
      build:
         context: .\src\Services\productCatalogApi
         dockerfile: Dockerfile
      environment:
         - ASPNETCORE_ENVIRONMENT=Development
         - DatabaseServer=mssqlserver
         - DatabaseName=CatalogDb
         - DatabaseUser=sa
         - DatabaseUserPassword=!5F&svw1234
      container_name: catalogapi
      ports:
         - "5100:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver
   tokenserver:
      build:
         context: .\src\Services\TokenServiceApi
         dockerfile: Dockerfile
      environment:
         - ASPNETCORE_ENVIRONMENT=Development
         - MvcClient=http://localhost:5200
         - DatabaseServer=mssqlserver
         - DatabaseName=TokenServiceDb
         - DatabaseUser=sa
         - DatabaseUserPassword=!5F&svw1234
      container_name: tokenserverapi
      ports:
         - "5300:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver
   mssqlserver:
      image: microsoft/mssql-server-linux:latest
      ports:
         - "1490:1433"
      container_name: mssqlcontainer
      environment:
         - ACCEPT_EULA=Y
         - 'SA_PASSWORD=!5F&svw1234'
      networks:
         - backend
   cart:
      image: cartimage
      build: 
         context: .\src\Services\CartApi
         dockerfile: Dockerfile
      environment: 
         - ASPNETCORE_ENVIRONMENT=Development
         - IdentityUrl=http://10.0.75.1:5300
      container_name: cartapi
      ports:
         - "5500:80"
      networks:
         - backend
         - frontend
      depends_on:
         - cart.data
         - tokenserver
   cart.data:
      image: redis
      ports:
         - "6377:6379"
      container_name: rediscontainer
      networks:
         - backend